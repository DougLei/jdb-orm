<?xml version="1.0" encoding="UTF-8"?>
<mapping-configuration>
	<!-- 属性信息的具体配置, 参考《table映射配置结构设计.tmp.xml》中的属性配置说明 -->
	<property order="0" supportCover="true" supportDelete="true" extend="" />
	
	<!-- 
		sql映射配置; 仿mybatis
		* name: sql映射名
		* oldName: 旧sql映射名; 如果配置, 框架会删除旧映射名的sql
	 -->
	<sql name="com.test" oldName="">
	
	
		<!-- 这个是可以被其他<content>元素通过<include ref-name="">来引用的 -->
		
		<!-- 
			可引用的sql内容配置; 只能通过include使用, 不能直接被框架调用
			* name: sql名称, 文件内唯一
		 -->
		<sql-content name="rs">
			<!-- 输入具体的sql内容 -->
		</sql-content>
		
		<!-- type值目前包括:  -->
		<!-- 
			当type=insert时, 且插入的表的主键为自增列时, 可以通过以下配置, 获得刚刚插入数据的主键值
			key: 针对传入参数中, 要给哪个属性赋生成的自增主键值, 可以为ognl表达式, 例如 user.id, 代表传入对象中user属性中的id
			oracleSequenceName: 当数据库是oracle时, 必须要配置序列名, 反之配置了序列名也不会有任何问题, 框架在执行时不会使用, 也不会出现异常
			其中key的优先级高于sequence, 即配置了sequence而没有配置key, 则配置也是无效的
			如果不配置, 则不会返回自增主键值
			
			举例:
			oracle配置insert sql
				insert into sys_user(id, name, age, sex) values(序列名.nextval, #{name}, #{age, dataType=number}, #{sex} )
				
			mysql/sqlserver配置insert sql
				insert into sys_user(name, age, sex) values(#{name}, #{age, dataType=number}, #{sex} ) -- 不需要配置自增相关的东西
		 -->
		
		<!-- 
			sql内容配置
			* name: sql名称, 文件内唯一
			* type: sql类型, 必填; 可使用的值有: insert, delete, update, select, declare, procedure
			
			针对type=insert时生效; 其目的是: 调用该sql内容会传入一个对象, 框架执行insert语句后得到生成自增主键id值, 根据这两个配置, 框架会将                       为了将insert生成的自增主键值, 传给调用sql时传入的对象中
			* key: 当调用该sql内容传入一个对象时, 
			* sequenceName: 
		 --> 
		<content name="" type="insert" key="id" sequenceName="">
			select * from sys_user 
			
			<include ref-name="rs" />
			
			
			
			
			
			
			
			
		<!--  -->
		<include ref-name="xx" />	
		<!-- 
			<where>
				<if test="age != null and age == 23">
					
					sql参数的属性配置, 参考《table映射配置结构设计.tmp.xml》中<column>的配置					
					and name = #{name, description=姓名, dbType=VARCHAR, dataType=string, placeholder=false, prefix=', suffix=', nullable=true, defaultValue=dv, validate=fales, legnth=10, precision=2}
				</if>
				<if test="age != null">
					and name = 'DougLei'
				</if>
			</where>
		-->	
			
		 <!-- 
			<set>
				<if test="age != null and age == 23">
					name = #{name},
				</if>
				<if test="age == null">
					name = 'DougLei',
				</if>
				<if test="age == null">
					name = 'DougLei222',
				</if>
			</set>
		-->	
		
		<!-- 	
			<trim prefix="where" prefixoverride="" suffix="" suffixoverride="">
				<if test="name == '哈哈'">
					b
				</if>
			</trim> 
		-->
		
		<!-- 
			<switch>
				<if test="age == null">
					name = 'age is null',
				</if>
				<if test="age == null">
					name = 'age not null',
				</if>
				<else>
					and else 
				</else>
			</switch>
		-->
		
		<!-- 
			<foreach collection="users" alias="user" open="where id in (" separator="," close=")">
				<if test="user.id == 1">
					#{user.id, dataType=string}
				</if>
			</foreach>
		-->	
		
			<foreach collection="userIds" alias="userId" open="where id in (" separator="," close=")">
				<if test="userId == 1">
					#{userId, dataType=string}
				</if>
			</foreach>
			
		
		</content>
		<!-- 
			dbType的值必须是全大写, 框架是区分大小写的, 且必须配置, 没有默认值, 目前支持的类型有:
			
				mysql数据库: BIGINT, CHAR, DATETIME, DATE, DECIMAL, INT, MEDIUMBLOB, MEDIUMTEXT, SMALLINT, VARCHAR
				
				oracle数据库: BLOB, CHAR, CLOB, CURSOR, DATE, NCHAR, NUMBER, NVARCHAR2, VARCHAR2
				
				sqlserver数据库: BIGINT, CHAR, DATETIME, DATE, DECIMAL, INT, NCHAR, NVARCHAR, SMALLINT, VARBINARY(MAX), VARCHAR, VARCHAR(MAX)
				
			或则也可以自定义, 继承com.douglei.orm.dialect.datatype.db.DBDataType类, 这里配置自定义类的全路径即可; 
			特别注意, 自定义的数据库数据类型, 类的类名即类型名, 具体可参考框架已经实现的类, 例如: com.douglei.orm.dialect.impl.sqlserver.datatype.db.Bigint
		 -->
	<!-- 	
		<content name="execProcedure" type="procedure">
			{call test_procedure (
				#{id, dbType=VARCHAR, mode=in},
				#{name, dbType=VARCHAR, mode=out}
			)}
		</content>
	-->	
	
		<!-- 验证器配置, 参考《table映射配置结构设计.tmp.xml》中的验证器配置结构 -->
		<validators></validators>
	</sql>
</mapping-configuration>